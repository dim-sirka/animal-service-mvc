plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "3.0"
}

group = 'com.dim-sirka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    //postgresql driver
    runtimeOnly 'org.postgresql:postgresql'
    //pagination support, dynamic query execution, ability to integrate custom data access code
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //lombok - generation of setters, getters, constructors at runtime
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    
    //for dto validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //for tests
    testImplementation 'org.testcontainers:postgresql:1.15.0-rc2'
    //for spring security(authentication and authorization)
    implementation 'org.springframework.boot:spring-boot-starter-security:2.3.4.RELEASE'
    //for return 401 from login endpoint
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    //for sending messages to user and admin regarding the new order
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.3.4.RELEASE'
    //for rendering .ftl pages
    implementation 'org.springframework.boot:spring-boot-starter-freemarker:2.3.5.RELEASE'

    implementation 'org.apache.commons:commons-lang3:3.10'

    implementation 'org.springframework.security:spring-security-taglibs:5.4.2'
    implementation 'javax.servlet.jsp:jsp-api:2.0'
}

test {
    useJUnitPlatform()
}

//sonarqube configurations
sonarqube {
    properties {
        property "sonar.projectKey", "dim-sirka_animal-service-mvc"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}
jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/text.xml")
        html.enabled false
        csv.enabled false
    }
}
project.tasks["sonarqube"].dependsOn "jacocoTestReport"
